public void sendToGCM()
        {
            string regId = "f1VpytvmVH8:APA91bEtVbY9Owg2j0plHYKG-WTg8nJ-UpAdRWVxncQPF_e6cFfWd5tp_ue_55RE1ti2Rrx3JE7XQYGJpRElrWpeFE2Y_2VQjufec9WrFYbwb-BJ4gdg8LYSTJzoxc6clBVqnAllcB2T";
                     

            // string regId = "";
            //string regId = "APA91bG_Keix4zjb2sGQxXH1qs1sLCxdwEVltTNTSM4xtaLKZ2_gQObOnXeZ5d9voPLxAx-Tsf97QbloLuPAbhqiy-bakCYfsS3k_wyrDAHUVi76LCk-wCAaL9a4dUx0Ymj9E8_V6hO2liMx-eIGAbG2cR4DiIgm5Q";
            var APIKey = "AIzaSyAqjectXM-v3nni8zC4F_Po2RDpD_HBCqY";


            string messageTopic = "/VerifyDeviceRegistration/";
            var SENDER_ID = "1036182018589";
            var value = "123123123";
            WebRequest tRequest;
            tRequest = WebRequest.Create("https://android.googleapis.com/gcm/send");
            tRequest.Method = "post";
            tRequest.ContentType = " application/x-www-form-urlencoded;charset=UTF-8";
            tRequest.Headers.Add(string.Format("Authorization: key={0}", APIKey));

            tRequest.Headers.Add(string.Format("Sender: id={0}", SENDER_ID));

            //Data_Post Format
            // string postData = "{'collapse_key' : 'demo', 'registration_id': [ '" + regId + "' ], 
            //'data': {'message': '" + Label1.Text + "'},'time_to_live' : '3' }";


            string postData = "collapse_key=score_update&time_to_live=108&delay_while_idle=1&data.topic=VerifyDeviceRegistration&data.message="
                + value + "&data.time=" + System.DateTime.Now.ToString() + "&registration_id=" + regId + "";


            Console.WriteLine(postData);
            Byte[] byteArray = Encoding.UTF8.GetBytes(postData);
            tRequest.ContentLength = byteArray.Length;

            Stream dataStream = tRequest.GetRequestStream();
            dataStream.Write(byteArray, 0, byteArray.Length);
            dataStream.Close();

            WebResponse tResponse = tRequest.GetResponse();

            dataStream = tResponse.GetResponseStream();

            StreamReader tReader = new StreamReader(dataStream);

            String sResponseFromServer = tReader.ReadToEnd();

            tReader.Close();
            dataStream.Close();
            tResponse.Close();
        }
		
		
		public void Verify_Credentials()
        {
            string oauthconsumerkey = "jSBnTpknelOuZX6e4Cg101oue";
            string oauthconsumersecret = "w5j7WPwHWwY4DSfJ82tRVZF7SBogZJ6XABptVt431uOowvwFKC";
            string oauthsignaturemethod = "HMAC-SHA1";
            string oauthversion = "1.0";
            string oauthtoken = "806837785-trTr0ObdqaW0owy1N0WXJFh6OGSlgUH74nh3qoHO";
            string oauthtokensecret = "AhkVPH5D1aKfUM7POHMizOf8HHbIaYuEtEo5KCCt5kUBk";
            string oauthnonce = Convert.ToBase64String(new ASCIIEncoding().GetBytes(DateTime.Now.Ticks.ToString()));
            TimeSpan ts = DateTime.UtcNow - new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);
            string oauthtimestamp = Convert.ToInt64(ts.TotalSeconds).ToString();
            SortedDictionary<string, string> basestringParameters = new SortedDictionary<string, string>();
            basestringParameters.Add("oauth_version", "1.0");
            basestringParameters.Add("oauth_consumer_key", oauthconsumerkey);
            basestringParameters.Add("oauth_nonce", oauthnonce);
            basestringParameters.Add("oauth_signature_method", "HMAC-SHA1");
            basestringParameters.Add("oauth_timestamp", oauthtimestamp);
            basestringParameters.Add("oauth_token", oauthtoken);
            //GS - Build the signature string
            StringBuilder baseString = new StringBuilder();
            baseString.Append("GET" + "&");
            baseString.Append(EncodeCharacters(Uri.EscapeDataString("https://api.twitter.com/1.1/account/verify_credentials.json") + "&"));
            foreach (KeyValuePair<string, string> entry in basestringParameters)
            {
                baseString.Append(EncodeCharacters(Uri.EscapeDataString(entry.Key + "=" + entry.Value + "&")));
            }

            //Since the baseString is urlEncoded we have to remove the last 3 chars - %26
            string finalBaseString = baseString.ToString().Substring(0, baseString.Length - 3);

            //Build the signing key
            string signingKey = EncodeCharacters(Uri.EscapeDataString(oauthconsumersecret)) + "&" +
            EncodeCharacters(Uri.EscapeDataString(oauthtokensecret));

            //Sign the request
            HMACSHA1 hasher = new HMACSHA1(new ASCIIEncoding().GetBytes(signingKey));
            string oauthsignature = Convert.ToBase64String(hasher.ComputeHash(new ASCIIEncoding().GetBytes(finalBaseString)));

            //Tell Twitter we don't do the 100 continue thing
            ServicePointManager.Expect100Continue = false;

            //authorization header
            HttpWebRequest hwr = (HttpWebRequest)WebRequest.Create(
              @"https://api.twitter.com/1.1/account/verify_credentials.json");
            StringBuilder authorizationHeaderParams = new StringBuilder();
            authorizationHeaderParams.Append("OAuth ");
            authorizationHeaderParams.Append("oauth_nonce=" + "\"" + Uri.EscapeDataString(oauthnonce) + "\",");
            authorizationHeaderParams.Append("oauth_signature_method=" + "\"" + Uri.EscapeDataString(oauthsignaturemethod) + "\",");
            authorizationHeaderParams.Append("oauth_timestamp=" + "\"" + Uri.EscapeDataString(oauthtimestamp) + "\",");
            authorizationHeaderParams.Append("oauth_consumer_key=" + "\"" + Uri.EscapeDataString(oauthconsumerkey) + "\",");
            if (!string.IsNullOrEmpty(oauthtoken))
                authorizationHeaderParams.Append("oauth_token=" + "\"" + Uri.EscapeDataString(oauthtoken) + "\",");
            authorizationHeaderParams.Append("oauth_signature=" + "\"" + Uri.EscapeDataString(oauthsignature) + "\",");
            authorizationHeaderParams.Append("oauth_version=" + "\"" + Uri.EscapeDataString(oauthversion) + "\"");
            hwr.Headers.Add("Authorization", authorizationHeaderParams.ToString());
            hwr.Method = "GET";
            hwr.ContentType = "application/x-www-form-urlencoded";

            //Allow us a reasonable timeout in case Twitter's busy
            hwr.Timeout = 3 * 60 * 1000;
            try
            {
                hwr.Proxy = new WebProxy("ihisproxy.healthgrp.com.sg", 8080);
                hwr.Proxy.Credentials = new NetworkCredential("goh0010g", "P@ssw0rd");
                HttpWebResponse rsp = hwr.GetResponse() as HttpWebResponse;
                Stream dataStream = rsp.GetResponseStream();
                //Open the stream using a StreamReader for easy access.
                StreamReader reader = new StreamReader(dataStream);
                //Read the content.
                string responseFromServer = reader.ReadToEnd();
            }
            catch (Exception ex)
            {

            }
        }